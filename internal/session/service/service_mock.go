// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	"github.com/go-petr/pet-bank/internal/domain"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockSessionRepoInterface is a mock of SessionRepoInterface interface.
type MockSessionRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSessionRepoInterfaceMockRecorder
}

// MockSessionRepoInterfaceMockRecorder is the mock recorder for MockSessionRepoInterface.
type MockSessionRepoInterfaceMockRecorder struct {
	mock *MockSessionRepoInterface
}

// NewMockSessionRepoInterface creates a new mock instance.
func NewMockSessionRepoInterface(ctrl *gomock.Controller) *MockSessionRepoInterface {
	mock := &MockSessionRepoInterface{ctrl: ctrl}
	mock.recorder = &MockSessionRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionRepoInterface) EXPECT() *MockSessionRepoInterfaceMockRecorder {
	return m.recorder
}

// CreateSession mocks base method.
func (m *MockSessionRepoInterface) CreateSession(ctx context.Context, arg domain.CreateSessionParams) (domain.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSession", ctx, arg)
	ret0, _ := ret[0].(domain.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSession indicates an expected call of CreateSession.
func (mr *MockSessionRepoInterfaceMockRecorder) CreateSession(ctx, arg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSession", reflect.TypeOf((*MockSessionRepoInterface)(nil).CreateSession), ctx, arg)
}

// GetSession mocks base method.
func (m *MockSessionRepoInterface) GetSession(ctx context.Context, id uuid.UUID) (domain.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSession", ctx, id)
	ret0, _ := ret[0].(domain.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSession indicates an expected call of GetSession.
func (mr *MockSessionRepoInterfaceMockRecorder) GetSession(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSession", reflect.TypeOf((*MockSessionRepoInterface)(nil).GetSession), ctx, id)
}
