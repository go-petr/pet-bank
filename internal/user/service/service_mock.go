// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	user "github.com/go-petr/pet-bank/internal/user"
	gomock "github.com/golang/mock/gomock"
)

// MockuserRepoInterface is a mock of userRepoInterface interface.
type MockuserRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockuserRepoInterfaceMockRecorder
}

// MockuserRepoInterfaceMockRecorder is the mock recorder for MockuserRepoInterface.
type MockuserRepoInterfaceMockRecorder struct {
	mock *MockuserRepoInterface
}

// NewMockuserRepoInterface creates a new mock instance.
func NewMockuserRepoInterface(ctrl *gomock.Controller) *MockuserRepoInterface {
	mock := &MockuserRepoInterface{ctrl: ctrl}
	mock.recorder = &MockuserRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockuserRepoInterface) EXPECT() *MockuserRepoInterfaceMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockuserRepoInterface) CreateUser(ctx context.Context, arg user.CreateUserParams) (user.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", ctx, arg)
	ret0, _ := ret[0].(user.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockuserRepoInterfaceMockRecorder) CreateUser(ctx, arg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockuserRepoInterface)(nil).CreateUser), ctx, arg)
}

// GetUser mocks base method.
func (m *MockuserRepoInterface) GetUser(ctx context.Context, username string) (user.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", ctx, username)
	ret0, _ := ret[0].(user.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockuserRepoInterfaceMockRecorder) GetUser(ctx, username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockuserRepoInterface)(nil).GetUser), ctx, username)
}
