// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	transfer "github.com/go-petr/pet-bank/internal/transfer"
	gomock "github.com/golang/mock/gomock"
)

// MocktransferRepoInterface is a mock of transferRepoInterface interface.
type MocktransferRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MocktransferRepoInterfaceMockRecorder
}

// MocktransferRepoInterfaceMockRecorder is the mock recorder for MocktransferRepoInterface.
type MocktransferRepoInterfaceMockRecorder struct {
	mock *MocktransferRepoInterface
}

// NewMocktransferRepoInterface creates a new mock instance.
func NewMocktransferRepoInterface(ctrl *gomock.Controller) *MocktransferRepoInterface {
	mock := &MocktransferRepoInterface{ctrl: ctrl}
	mock.recorder = &MocktransferRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocktransferRepoInterface) EXPECT() *MocktransferRepoInterfaceMockRecorder {
	return m.recorder
}

// TransferTx mocks base method.
func (m *MocktransferRepoInterface) TransferTx(ctx context.Context, arg transfer.CreateTransferParams) (transfer.TransferTxResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransferTx", ctx, arg)
	ret0, _ := ret[0].(transfer.TransferTxResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TransferTx indicates an expected call of TransferTx.
func (mr *MocktransferRepoInterfaceMockRecorder) TransferTx(ctx, arg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransferTx", reflect.TypeOf((*MocktransferRepoInterface)(nil).TransferTx), ctx, arg)
}
